Futuregrid Quickstart Guide
===========================

Downloading and Building Swift
------------------------------
The most recent versions of Swift can be found at 
http://www.ci.uchicago.edu/swift/downloads/index.php. To run on futuregrid,
you will need to download the development/trunk version from SVN.

Adding Swift to your PATH
-------------------------
Once you have installed Swift, add the Swift binary to your PATH so you can
easily run it from any directory. 

In your home directory, edit the file ".bashrc".

If you have installed Swift via a source repository, add the following line
at the bottom of .bashrc.

-----
export PATH=$PATH:$HOME/cog/modules/swift/dist/swift-svn/bin
-----

Requesting Futuregrid Access
----------------------------
If you do not already have a futuregrid account, you can follow the
instructions at https://portal.futuregrid.org/gettingstarted to get started.
This page provides information on how to create an account, how to join
a project, how to set up your SSH keys, and how to create a new project.

Downloading Swift VM Tools
--------------------------
A set of scripts based around cloudinitd are used to easily start virtual
machines. To download, change to your home directory and run the 
following command:

-----
$ svn co https://svn.ci.uchicago.edu/svn/vdl2/usertools/swift-vm-boot
-----

Download your Credentials
-------------------------
Run the following commands to retrieve your credentials:
-----
$ scp yourusername@hotel.futuregrid.org:nimbus_creds.tar.gz .
$ tar xvfz nimbus_creds.tar.gz
-----
When you extract your credential file, look at the file called
hotel.conf. Near the bottom of this file will be two settings
called vws.repository.s3id and vws.repository.s3key. Copy these
values for the next step.

Configuring Swift VM Tools
--------------------------
Change directories into the swift-vm-boot directory. Edit the file
called env.sh. There are two settings here that you will need to
modify: FUTUREGRID_IAAS_ACCESS_KEY and FUTUREGRID_IAAS_SECRET_KEY.
Paste your access key (s3id) and secret key (s3key) here and save
the file. By default, env.sh requests 2 nodes on hotel and 2 nodes
on sierra. Change these values as needed. Run install.sh from the 
swift-vm-boot directory to complete the installation of Swift VM 
Tools. The Swift VM Tools may require a fairly recent version of
Python. If you run into problems while running the install.sh
script, please try a more recent version of Python and associated
libraries.

Configuring coaster-service.conf
--------------------------------
Within your swift distribution's etc directory is a file called 
coaster-service.conf. There are many options here you can modify
as needed, but these are the settings that will be required
to run on futuregrid:

-----
export WORKER_WORK=/tmp
export WORKER_MODE=futuregrid
export SHARED_FILESYSTEM=no
export WORKER_USERNAME=root
export SSH_TUNNELING=yes
export SWIFTVMBOOT_DIR=$HOME/swift-vm-boot
export WORK=/tmp
-----

These is a brief description of these settings in the coaster-service.conf file.
Tunneling should be used when you are restricted by a firewall. If your local
machine has multiple network interfaces, you should also manually set the IP
address of your machine with export IPADDR=your.ip.address.here.

Starting the Coaster Service Script
-----------------------------------
Now that everything is configured, change to a temporary directory 
and run this command to start the coaster service:

-----
$ start-coaster-service
-----

This command will start the VMs, start the required processes on the worker nodes,
and generate Swift configuration files for you to use. The configuration files
will be generated in your current directory. These files are sites.xml, tc.data, 
and cf.

Running Swift
-------------
Now that you have all of your configuration files generated, run the following command:

-----
$ swift -sites.file sites.xml -tc.file tc.data -config cf <yourscript.swift>
-----

If you would like to create a custom tc file for repeated use, rename it to something other
than tc.data to prevent it from being overwritten. The sites.xml however will need to be
regenerated every time you start the coaster service. If you need to repeatedly modify some 
sites.xml options, you may edit the template in Swift's etc/sites/persistent-coasters. You
may also create your own custom tc files with the hostname of persistent-coasters. More
information about this can be found in the Swift userguide at 
http://www.ci.uchicago.edu/swift/guides/trunk/userguide/userguide.html.

Stopping the Coaster Service Script
-----------------------------------
To stop the coaster service, run the following command:
-----
$ stop-coaster-service
-----

This will kill the coaster service, kill the worker scripts on remote systems and terminate
the virtual machines that were created during start-coaster-service.

More Help
---------
The best place for additional help is the Swift user mailing list. You can subscribe to this list at
http://mail.ci.uchicago.edu/mailman/listinfo/swift-user. When submitting information, please send 
your sites.xml file, your tc.data, and any error messages you run into.

